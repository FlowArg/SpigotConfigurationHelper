plugins {
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven-publish'

version = '1.0.0'
group = 'fr.flowarg'
archivesBaseName = 'sch'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

repositories {
    maven {
        url "https://hub.spigotmc.org/nexus/content/repositories/snapshots"
    }
    maven {
        url "https://hub.spigotmc.org/nexus/content/repositories/public"
    }
    jcenter()
    mavenCentral()
}

dependencies {
    implementation 'org.spigotmc:spigot-api:1.15.2-R0.1-SNAPSHOT'
    implementation 'org.apache.logging.log4j:log4j-api:2.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.1'
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation 'commons-lang:commons-lang:2.6'
    implementation 'com.google.guava:guava:21.0'
    implementation group: 'org.jetbrains', name: 'annotations', version: '18.0.0'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : archivesBaseName,
                "Specification-Vendor"    : "FlowArg",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : getArchiveVersion(),
                "Implementation-Vendor"   : "flowarg",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Built-By'                : System.properties['user.name'],
                'Created-By'              : "Gradle ${gradle.gradleVersion}",
                'Build-Jdk'               : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS'                : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        ])
    }
}

publishing
        {
            publications
                    {
                        mavenJava(MavenPublication)
                                {
                                    pom
                                            {
                                                groupId = project.group
                                                version = project.version
                                                artifactId = 'sch'
                                                name = project.name
                                                description = 'A Spigot library for manage configurations.'
                                                url = 'https://github.com/FlowArg/SpigotConfigurationHelper'

                                                issueManagement
                                                        {
                                                            system = 'github'
                                                            url = 'https://github.com/FlowArg/SpigotConfigurationHelper/issues'
                                                        }

                                                licenses
                                                        {
                                                            license
                                                                    {
                                                                        name = 'Apache 2.0 LICENSE'
                                                                        url = 'https://github.com/FlowArg/SpigotConfigurationHelper/blob/master/LICENSE'
                                                                        distribution = 'repo'
                                                                    }
                                                        }
                                            }
                                }
                    }
            repositories
                    {
                        maven
                                {
                                    url "http://192.168.1.9/maven/"
                                }
                    }
        }

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}